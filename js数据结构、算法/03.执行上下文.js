// 执行上下文
/*
   js引擎在js代码正式执行之前先创建并进入执行环境
      1. 创建变量对象，该对象用于收集：变量、函数、函数的参数
        - var function
      2. 确认this的指向
      3. 创建作用域链
 */

/**
 *  内存管理：
 *    js引擎不允许直接操作堆内存，所以我们每次访问堆内存的数据，先找栈内存，通过栈内存中变量保存的引用地址去访问堆空间
 *
 *  内存管理三部曲：
 *     1.分配内存空间
 *     2.使用分配的内存空间
 *     3.使用完释放分配的内存空间
 *
 *  函数的执行上下文：
 *      函数的局部变量都保存在栈内存，如果某一个变量的值是引用数据类型：变量保存的是引用地址，数据保存在堆内存，
 *      函数保存高效的方法：函数执行完立马去释放之前分配给当前函数的栈内存
 *
 */


// console.log(this);
// console.log(window);
var a = 123;
function fun() {
    console.log('fun()');
    var b = 123;
    function fun2() {
        console.log("fun2()");
    }
    fun2();
}

fun()